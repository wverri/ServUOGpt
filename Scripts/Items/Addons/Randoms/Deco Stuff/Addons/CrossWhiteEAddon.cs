// Automatically generated by the
// AddonGenerator script by Arya
// Generator edited 10.Mar.07 by Papler
using System;
using Server;
using Server.Items;
namespace Server.Items
{
	public class CrossWhiteEAddon : BaseAddon {
		public override BaseAddonDeed Deed{get{return new CrossWhiteEAddonDeed();}}
		[ Constructable ]
		public CrossWhiteEAddon()
		{
            CrossAddonComponent ac = null;
            ac = new CrossAddonComponent(1812);
			ac.Hue = 1150;
			AddComponent( ac, -2, 2, 0 );

            ac = new CrossAddonComponent(4834);
			ac.Hue = 20;
			AddComponent( ac, 1, 0, 20 );

            ac = new CrossAddonComponent(4834);
			ac.Hue = 20;
			AddComponent( ac, 1, 2, 20 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, 0, 0, 45 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, 0, 0, 40 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, 0, 0, 35 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, 0, 1, 35 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, 0, 2, 35 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, 0, -1, 35 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, 0, -2, 35 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, 0, 0, 30 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, 0, 0, 25 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, 0, 0, 20 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, 0, 0, 15 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, 0, 0, 10 );

            ac = new CrossAddonComponent(1805);
			ac.Hue = 1150;
			AddComponent( ac, -2, 1, 0 );

            ac = new CrossAddonComponent(1805);
			ac.Hue = 1150;
			AddComponent( ac, -2, 0, 0 );

            ac = new CrossAddonComponent(1805);
			ac.Hue = 1150;
			AddComponent( ac, -2, -1, 0 );

            ac = new CrossAddonComponent(1804);
			ac.Hue = 1150;
			AddComponent( ac, 1, -2, 0 );

            ac = new CrossAddonComponent(1804);
			ac.Hue = 1150;
			AddComponent( ac, 0, -2, 0 );

            ac = new CrossAddonComponent(1804);
			ac.Hue = 1150;
			AddComponent( ac, -1, -2, 0 );

            ac = new CrossAddonComponent(1802);
			ac.Hue = 1150;
			AddComponent( ac, 1, 2, 0 );

            ac = new CrossAddonComponent(1802);
			ac.Hue = 1150;
			AddComponent( ac, 0, 2, 0 );

            ac = new CrossAddonComponent(1802);
			ac.Hue = 1150;
			AddComponent( ac, -1, 2, 0 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, 0, 0, 5 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, 1, 1, 0 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, 1, 0, 0 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, 1, -1, 0 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, 0, 1, 0 );

            ac = new CrossAddonComponent(1801);
			AddComponent( ac, 0, 0, 0 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, 0, -1, 0 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, -1, 1, 0 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, -1, 0, 0 );

            ac = new CrossAddonComponent(1801);
			ac.Hue = 1150;
			AddComponent( ac, -1, -1, 0 );

            ac = new CrossAddonComponent(3223);
			AddComponent( ac, 0, -1, 5 );

            ac = new CrossAddonComponent(3223);
			AddComponent( ac, -1, 0, 6 );

            ac = new CrossAddonComponent(3223);
			AddComponent( ac, 0, 1, 5 );

            ac = new CrossAddonComponent(3223);
			AddComponent( ac, 1, 0, 5 );

            ac = new CrossAddonComponent(3203);
			ac.Hue = 20;
			AddComponent( ac, -1, 1, 5 );

            ac = new CrossAddonComponent(3203);
			ac.Hue = 20;
			AddComponent( ac, 1, -1, 5 );

            ac = new CrossAddonComponent(3203);
			ac.Hue = 20;
			AddComponent( ac, 1, 1, 5 );

            ac = new CrossAddonComponent(11516);
			AddComponent( ac, 1, 1, 10 );

            ac = new CrossAddonComponent(11516);
			AddComponent( ac, 1, 1, 23 );

            ac = new CrossAddonComponent(1813);
			ac.Hue = 1150;
			AddComponent( ac, 2, -2, 0 );

            ac = new CrossAddonComponent(1811);
			ac.Hue = 1150;
			AddComponent( ac, 2, 2, 0 );

            ac = new CrossAddonComponent(1803);
			ac.Hue = 1150;
			AddComponent( ac, 2, 1, 0 );

            ac = new CrossAddonComponent(1803);
			ac.Hue = 1150;
			AddComponent( ac, 2, 0, 0 );

            ac = new CrossAddonComponent(1803);
			ac.Hue = 1150;
			AddComponent( ac, 2, -1, 0 );


		}
		public CrossWhiteEAddon( Serial serial ) : base( serial ){}
		public override void Serialize( GenericWriter writer ){base.Serialize( writer );writer.Write( 0 );}
		public override void Deserialize( GenericReader reader ){base.Deserialize( reader );reader.ReadInt();}
	}

    public class CrossAddonComponent : AddonComponent
    {
        public override bool HandlesOnMovement { get { return true; } }

        [CommandProperty(AccessLevel.GameMaster)]
        public bool IsAnkh { get; set; }

        [Constructable]
        public CrossAddonComponent(int itemID)
            : base(itemID)
        {
            IsAnkh = true;
        }

        public CrossAddonComponent(Serial serial)
            : base(serial)
        {
        }

        public override void OnMovement(Mobile m, Point3D oldLocation)
        {
            if (Parent == null && Utility.InRange(Location, m.Location, 1) && !Utility.InRange(Location, oldLocation, 1))
            {
                Ankhs.Resurrect(m, this);
            }
        }


        public override void OnDoubleClickDead(Mobile m)
        {
            Ankhs.Resurrect(m, this);
        }

        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);

            writer.Write((int)1); // version

            writer.Write(IsAnkh);
        }

        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);

            int version = reader.ReadInt();

            switch (version)
            {
                case 1:
                    {
                        IsAnkh = reader.ReadBool();
                    }
                    goto case 0;
                case 0:
                {
                }
                    break;
            }
        }
    }

	public class CrossWhiteEAddonDeed : BaseAddonDeed {
		public override BaseAddon Addon{get{return new CrossWhiteEAddon();}}
		[Constructable]
		public CrossWhiteEAddonDeed(){Name = "CrossWhiteE";}
		public CrossWhiteEAddonDeed( Serial serial ) : base( serial ){}
		public override void Serialize( GenericWriter writer ){	base.Serialize( writer );writer.Write( 0 );}
		public override void	Deserialize( GenericReader reader )	{base.Deserialize( reader );reader.ReadInt();}
	}
}